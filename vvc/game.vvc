init = () -> Self {
    <
    position = <x=0.0;y=0.0;>;
    speed = < x = 167.0; y = -200.0;>;
    >
};

draw_line = (start: Vec2, end: Vec2) -> Command {
    < command = "DrawLine"; start = start; end = end; >
};

draw_box = (center: Vec2, size: Float) -> List<Command> {
    bot_left = < x = (@center.x +. size); y = (@center.y -. size); > ;
    top_left = < x = (@center.x +. size); y = (@center.y +. size); > ;
    top_right = < x = (@center.x -. size); y = (@center.y +. size); > ;
    bot_right = < x = (@center.x -. size); y = (@center.y -. size); > ;
    [
        draw_line(bot_left, top_left),
        draw_line(top_left, top_right),
        draw_line(top_right, bot_right),
        draw_line(bot_right, bot_left),
    ]
};

draw_bouncer = (position: Vec2) -> List<Command> {
    draw_box(position, 7.0)
};

draw_borders = (_: Nothing) -> List<Command> {
    draw_box(< x = 0.0; y = 0.0;>, 300.0)
};

move = (position: Vec2, speed: Vec2, delta: Float) -> Vec2 {
    < 
        x = (@position.x +. (@speed.x *. delta));
        y = (@position.y +. (@speed.y *. delta));
    >
};

bounce = (position: Vec2, speed: Vec2) -> Vec2 {
    x_pos = @position.x;
    y_pos = @position.y;
    initial_x_speed = @speed.x;
    initial_y_speed = @speed.y;
    width = 7.0;
    border_x_r = (300.0 -. width);
    border_x_l = (-300.0 +. width);
    border_y_u = (300.0 -. width);
    border_y_d = (-300.0 +. width);
    new_x_speed = if(((x_pos <. border_x_l) || (x_pos >. border_x_r)),
        (initial_x_speed *. -1.0),
        initial_x_speed
        );
    new_y_speed = if(((y_pos <. border_y_d) || (y_pos >. border_y_u)),
        (initial_y_speed *. -1.0),
        initial_y_speed
        );
    < x = new_x_speed; y = new_y_speed;>
};

update = (self: Self, delta: Float) -> SelfAndCommands {
    moved_pos = move(@self.position, @self.speed, delta);
    bounced_speed = bounce(moved_pos, @self.speed);
    commands = (draw_bouncer(@self.position) ~~ draw_borders(0));
    <
    self = < self | position = moved_pos; speed = bounced_speed; >;
    commands = commands;
    >
};
